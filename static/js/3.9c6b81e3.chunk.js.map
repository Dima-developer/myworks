{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","classes","item","src","alt","message","LikesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","placeholder","component","Textarea","validate","required","MyPosts","postsElements","posts","map","p","key","id","likesCount","React","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.9c6b81e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__5g9gx\",\"photo\":\"ProfileInfo_photo__1RaKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__UUesz\",\"posts\":\"MyPosts_posts__3WOSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2rSD2\"};","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src=\"https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg\" alt=\"ava\" />\r\n            { props.message }\r\n            <div>\r\n                <span>Like</span> { props.LikesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../ utilities/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" placeholder=\"Post message\" component={Textarea}\r\n                validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n        )\r\n}\r\nlet AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n    /*let newPostText = props.newPostText;*/\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n                {/* <Post message={posts[0].message} likesCount={posts[0].likesCount} />\r\n                <Post message={posts[1].message} likesCount={posts[1].likesCount} /> */}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n/*const AddNewPostForm = (props) => {\r\n    return (\r\n\r\n    )\r\n}*/\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    },[props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"Add a status\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport MyPostsContainer from './My posts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n            updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n*/\r\n"],"sourceRoot":""}